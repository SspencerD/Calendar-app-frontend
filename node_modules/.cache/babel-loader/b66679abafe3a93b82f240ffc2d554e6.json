{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { fetchWithoutToken } from '../components/helpers/fetch.js';\nimport { types } from '../types/types.js';\nconst [formRegisterValues, handleRegisterInputChange] = useForm({\n  rName: 'Lorenzo Villanueva',\n  rEmail: 'lvillanueva@gmail.com',\n  rPassword: '123456',\n  rPassword2: '123456'\n});\nconst {\n  rName,\n  rEmail,\n  rPassword,\n  rPassword2\n} = formRegisterValues;\nexport const startLogin = (email, password) => {\n  return async dispatch => {\n    const resp = await fetchWithoutToken('auth', {\n      email,\n      password\n    }, 'POST');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({\n        uid: body.uid,\n        name: body.name\n      }));\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nconst login = user => ({\n  type: types.authLogin,\n  payload: user\n});","map":{"version":3,"sources":["/home/sspencer/Escritorio/Proyectos/React/calendar-app/src/actions/auth.js"],"names":["Swal","fetchWithoutToken","types","formRegisterValues","handleRegisterInputChange","useForm","rName","rEmail","rPassword","rPassword2","startLogin","email","password","dispatch","resp","body","json","ok","localStorage","setItem","token","Date","getTime","login","uid","name","fire","msg","user","type","authLogin","payload"],"mappings":"AACA,OAAOA,IAAP,MAAiB,aAAjB;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAA0C,MAAM,CAACC,kBAAD,EAAqBC,yBAArB,IAAkDC,OAAO,CAAC;AAElGC,EAAAA,KAAK,EAAE,oBAF2F;AAGlGC,EAAAA,MAAM,EAAE,uBAH0F;AAIlGC,EAAAA,SAAS,EAAE,QAJuF;AAKlGC,EAAAA,UAAU,EAAE;AALsF,CAAD,CAA/D;AAQtC,MAAM;AAACH,EAAAA,KAAD;AAAOC,EAAAA,MAAP;AAAcC,EAAAA,SAAd;AAAwBC,EAAAA;AAAxB,IAAsCN,kBAA5C;AAEJ,OAAO,MAAMO,UAAU,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAoB;AAE1C,SAAO,MAAOC,QAAP,IAAqB;AAExB,UAAMC,IAAI,GAAG,MAAMb,iBAAiB,CAAE,MAAF,EAAU;AAACU,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAV,EAA2B,MAA3B,CAApC;AACA,UAAMG,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAnB;;AAEA,QAAGD,IAAI,CAACE,EAAR,EAAa;AAETC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BJ,IAAI,CAACK,KAAlC;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwC,IAAIE,IAAJ,GAAWC,OAAX,EAAxC;AAEAT,MAAAA,QAAQ,CAACU,KAAK,CAAC;AACXC,QAAAA,GAAG,EAAET,IAAI,CAACS,GADC;AAEXC,QAAAA,IAAI,EAAEV,IAAI,CAACU;AAFA,OAAD,CAAN,CAAR;AAIH,KATD,MASM;AACFzB,MAAAA,IAAI,CAAC0B,IAAL,CAAU,OAAV,EAAkBX,IAAI,CAACY,GAAvB,EAA2B,OAA3B;AACH;AACJ,GAjBD;AAkBH,CApBM;;AAsBP,MAAMJ,KAAK,GAAIK,IAAD,KAAU;AACpBC,EAAAA,IAAI,EAAE3B,KAAK,CAAC4B,SADQ;AAEpBC,EAAAA,OAAO,EAAEH;AAFW,CAAV,CAAd","sourcesContent":["\nimport Swal from 'sweetalert2';\nimport { fetchWithoutToken } from '../components/helpers/fetch.js';\nimport { types } from '../types/types.js';const [formRegisterValues, handleRegisterInputChange] = useForm({\n\n        rName: 'Lorenzo Villanueva',\n        rEmail: 'lvillanueva@gmail.com',\n        rPassword: '123456',\n        rPassword2: '123456'\n    });\n\n    const {rName,rEmail,rPassword,rPassword2} = formRegisterValues;\n\nexport const startLogin = (email,password) => {\n\n    return async( dispatch ) => {\n\n        const resp = await fetchWithoutToken( 'auth', {email,password},'POST');\n        const body = await resp.json();\n\n        if(body.ok ) {\n\n            localStorage.setItem('token',body.token);\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        }else {\n            Swal.fire('Error',body.msg,'error');\n        }\n    }\n} \n\nconst login = (user) =>({\n    type: types.authLogin,\n    payload: user\n\n})"]},"metadata":{},"sourceType":"module"}