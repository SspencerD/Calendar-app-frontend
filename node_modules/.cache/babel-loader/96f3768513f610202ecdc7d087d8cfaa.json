{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sspen\\\\Desktop\\\\Proyectos\\\\React\\\\calendar-app\\\\src\\\\components\\\\calendar\\\\CalendarPage.js\";\nimport React, { useState } from 'react';\nimport { Navbar } from '../ui/Navbar';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { messages } from '../helpers/calendar-messages-es';\nimport moment from 'moment';\nimport 'moment/locale/es-mx';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventSetActive } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\nexport const CalendarPage = () => {\n  const {\n    activeEvent\n  } = useSelector(state => state.calendar);\n  const dispatch = useDispatch();\n  const {\n    events\n  } = useSelector(state => state.calendar);\n  const [lastview, setlastview] = useState(localStorage.getItem('lastView') || 'month');\n\n  const onDoubleClick = e => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = e => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = e => {\n    setlastview(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const onSelectSlot = e => {};\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: '#367CF7',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white'\n    };\n    return {\n      style\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      messages: messages,\n      eventPropGetter: eventStyleGetter,\n      onDoubleClickEvent: onDoubleClick,\n      onSelectEvent: onSelectEvent,\n      onView: onViewChange,\n      onSelectSlot: onSelectSlot,\n      selected: true,\n      view: lastview,\n      components: {\n        event: CalendarEvent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CalendarModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddNewFab, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), activeEvent && /*#__PURE__*/_jsxDEV(DeleteEventFab, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/sspen/Desktop/Proyectos/React/calendar-app/src/components/calendar/CalendarPage.js"],"names":["React","useState","Navbar","Calendar","momentLocalizer","messages","moment","CalendarEvent","CalendarModal","useDispatch","useSelector","uiOpenModal","eventSetActive","AddNewFab","DeleteEventFab","locale","localizer","CalendarPage","activeEvent","state","calendar","dispatch","events","lastview","setlastview","localStorage","getItem","onDoubleClick","e","onSelectEvent","onViewChange","setItem","onSelectSlot","eventStyleGetter","event","start","end","isSelected","style","backgroundColor","borderRadius","opacity","display","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { messages } from '../helpers/calendar-messages-es';\r\nimport moment from 'moment';\r\n\r\nimport 'moment/locale/es-mx';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\n\r\nexport const CalendarPage = () => {\r\n\r\n\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {events} = useSelector(state => state.calendar)\r\n\r\n    const [lastview, setlastview] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n\r\n        dispatch(eventSetActive(e));\r\n\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setlastview(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n\r\n        const style = {\r\n            backgroundColor: '#367CF7',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n\r\n            <Navbar />\r\n\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={ onSelectSlot }\r\n                selected={ true }\r\n                view={lastview}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n\r\n\r\n            <CalendarModal />\r\n            <AddNewFab />\r\n\r\n            {\r\n                 (activeEvent)  &&\r\n\r\n                <DeleteEventFab/>\r\n\r\n            }\r\n        \r\n              \r\n            \r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}