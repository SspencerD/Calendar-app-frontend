{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sspen\\\\Desktop\\\\Proyectos\\\\React\\\\calendar-app\\\\src\\\\components\\\\calendar\\\\CalendarPage.js\";\nimport React, { useState } from 'react';\nimport { Navbar } from '../ui/Navbar';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { messages } from '../helpers/calendar-messages-es';\nimport moment from 'moment';\nimport 'moment/locale/es-mx';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\nconst events = [{\n  title: 'Cumpleloco',\n  start: moment().toDate(),\n  end: moment().add(2, 'hours').toDate(),\n  bgcolor: '#fafa',\n  notes: 'Comprar la birrah',\n  user: {\n    id: '123',\n    name: 'Santiago'\n  }\n}];\nexport const CalendarPage = () => {\n  const dispatch = useDispatch();\n  const [lastview, setlastview] = useState(localStorage.getItem('lastView') || 'month');\n\n  const onDoubleClick = e => {\n    console.log('Abrir modal');\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = e => {};\n\n  const onViewChange = e => {\n    setlastview(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: '#367CF7',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white'\n    };\n    return {\n      style\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      messages: messages,\n      eventPropGetter: eventStyleGetter,\n      onDoubleClickEvent: onDoubleClick,\n      onSelectEvent: onSelectEvent,\n      onView: onViewChange,\n      view: lastview,\n      components: {\n        event: CalendarEvent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CalendarModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/sspen/Desktop/Proyectos/React/calendar-app/src/components/calendar/CalendarPage.js"],"names":["React","useState","Navbar","Calendar","momentLocalizer","messages","moment","CalendarEvent","CalendarModal","useDispatch","uiOpenModal","locale","localizer","events","title","start","toDate","end","add","bgcolor","notes","user","id","name","CalendarPage","dispatch","lastview","setlastview","localStorage","getItem","onDoubleClick","e","console","log","onSelectEvent","onViewChange","setItem","eventStyleGetter","event","isSelected","style","backgroundColor","borderRadius","opacity","display","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,qBAAP;AACA,OAAO,mDAAP;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEAJ,MAAM,CAACK,MAAP,CAAc,IAAd;AAEA,MAAMC,SAAS,GAAGR,eAAe,CAACE,MAAD,CAAjC;AAEA,MAAMO,MAAM,GAAG,CAAC;AACZC,EAAAA,KAAK,EAAE,YADK;AAEZC,EAAAA,KAAK,EAAET,MAAM,GAAGU,MAAT,EAFK;AAGZC,EAAAA,GAAG,EAAEX,MAAM,GAAGY,GAAT,CAAa,CAAb,EAAe,OAAf,EAAwBF,MAAxB,EAHO;AAIZG,EAAAA,OAAO,EAAC,OAJI;AAKZC,EAAAA,KAAK,EAAC,mBALM;AAMZC,EAAAA,IAAI,EAAC;AACDC,IAAAA,EAAE,EAAC,KADF;AAEDC,IAAAA,IAAI,EAAC;AAFJ;AANO,CAAD,CAAf;AAYA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAG9B,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AAEA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC2B,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,OAArC,CAAxC;;AAGA,QAAMC,aAAa,GAAIC,CAAD,IAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAR,IAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AAEH,GAJD;;AAMA,QAAMwB,aAAa,GAAIH,CAAD,IAAM,CAG3B,CAHD;;AAKA,QAAMI,YAAY,GAAIJ,CAAD,IAAM;AACvBJ,IAAAA,WAAW,CAACI,CAAD,CAAX;AACDH,IAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCL,CAAjC;AACF,GAHD;;AAWA,QAAMM,gBAAgB,GAAG,CAACC,KAAD,EAAQvB,KAAR,EAAeE,GAAf,EAAoBsB,UAApB,KAAmC;AAGxD,UAAMC,KAAK,GAAG;AACVC,MAAAA,eAAe,EAAE,SADP;AAEVC,MAAAA,YAAY,EAAE,KAFJ;AAGVC,MAAAA,OAAO,EAAE,GAHC;AAIVC,MAAAA,OAAO,EAAE,OAJC;AAKVC,MAAAA,KAAK,EAAE;AALG,KAAd;AASA,WAAM;AACFL,MAAAA;AADE,KAAN;AAIH,GAhBD;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,QAAD;AACI,MAAA,SAAS,EAAE5B,SADf;AAEI,MAAA,MAAM,EAAEC,MAFZ;AAGI,MAAA,aAAa,EAAC,OAHlB;AAII,MAAA,WAAW,EAAC,KAJhB;AAKI,MAAA,QAAQ,EAAER,QALd;AAMI,MAAA,eAAe,EAAGgC,gBANtB;AAOI,MAAA,kBAAkB,EAAEP,aAPxB;AAQI,MAAA,aAAa,EAAEI,aARnB;AASI,MAAA,MAAM,EAAGC,YATb;AAUI,MAAA,IAAI,EAAET,QAVV;AAWI,MAAA,UAAU,EAAE;AACRY,QAAAA,KAAK,EAAE/B;AADC;AAXhB;AAAA;AAAA;AAAA;AAAA,YALJ,eAqBI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA1EM","sourcesContent":["import React, { useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { messages } from '../helpers/calendar-messages-es';\r\nimport moment from 'moment';\r\n\r\nimport 'moment/locale/es-mx';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst events = [{\r\n    title: 'Cumpleloco',\r\n    start: moment().toDate(),\r\n    end: moment().add(2,'hours').toDate(),\r\n    bgcolor:'#fafa',\r\n    notes:'Comprar la birrah',\r\n    user:{\r\n        id:'123',\r\n        name:'Santiago',\r\n    }\r\n}]\r\n\r\nexport const CalendarPage = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [lastview, setlastview] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n\r\n    const onDoubleClick = (e) =>{\r\n        console.log('Abrir modal')\r\n        dispatch(uiOpenModal());\r\n        \r\n    }\r\n\r\n    const onSelectEvent = (e) =>{\r\n        \r\n        \r\n    }\r\n    \r\n    const onViewChange = (e) =>{\r\n        setlastview(e);\r\n       localStorage.setItem('lastView', e);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected ) =>{\r\n\r\n\r\n        const style = {\r\n            backgroundColor: '#367CF7',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n\r\n        }\r\n\r\n        return{\r\n            style\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n\r\n            <Navbar />\r\n\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={ onViewChange }\r\n                view={lastview}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <CalendarModal/>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}