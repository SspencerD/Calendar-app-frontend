{"ast":null,"code":"import moment from \"moment\";\nimport { S } from \"../../node_modules/xmlchars/xml/1.0/ed5\";\nimport { types } from \"../types/types\";\nconst initialState = {\n  events: [{\n    id: new Date().getTime(),\n    title: 'Cumpleloco',\n    start: moment().toDate(),\n    end: moment().add(2, 'hours').toDate(),\n    bgcolor: '#fafa',\n    notes: 'Comprar la birrah',\n    user: {\n      id: '123',\n      name: 'Santiago'\n    }\n  }],\n  activeEvent: null\n};\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return { ...state,\n        activeEvent: action.payload\n      };\n\n    case types.eventAddNew:\n      return { ...state,\n        events: [...state.events, action.payload]\n      };\n\n    case types.eventClearEvent:\n      return { ...state,\n        activeEvent: null\n      };\n\n    case types.eventUpdated:\n      return { ...state,\n        events: state.events.map(e => e.id === action.payload.id ? action.payload : e)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/sspen/Desktop/Proyectos/React/calendar-app/src/reducers/calendarReducer.js"],"names":["moment","S","types","initialState","events","id","Date","getTime","title","start","toDate","end","add","bgcolor","notes","user","name","activeEvent","calendarReducer","state","action","type","eventSetActive","payload","eventAddNew","eventClearEvent","eventUpdated","map","e"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,CAAT,QAAkB,yCAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,YAAY,GAAG;AAEjBC,EAAAA,MAAM,EAAC,CAAC;AACJC,IAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EADA;AAEJC,IAAAA,KAAK,EAAE,YAFH;AAGJC,IAAAA,KAAK,EAAET,MAAM,GAAGU,MAAT,EAHH;AAIJC,IAAAA,GAAG,EAAEX,MAAM,GAAGY,GAAT,CAAa,CAAb,EAAe,OAAf,EAAwBF,MAAxB,EAJD;AAKJG,IAAAA,OAAO,EAAC,OALJ;AAMJC,IAAAA,KAAK,EAAC,mBANF;AAOJC,IAAAA,IAAI,EAAC;AACDV,MAAAA,EAAE,EAAC,KADF;AAEDW,MAAAA,IAAI,EAAC;AAFJ;AAPD,GAAD,CAFU;AAcjBC,EAAAA,WAAW,EAAE;AAdI,CAArB;AAoBA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGhB,YAAT,EAAuBiB,MAAvB,KAAiC;AAE5D,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKnB,KAAK,CAACoB,cAAX;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,WAAW,EAAEG,MAAM,CAACG;AAFlB,OAAN;;AAIA,SAAKrB,KAAK,CAACsB,WAAX;AACI,aAAM,EAEF,GAAGL,KAFD;AAGFf,QAAAA,MAAM,EAAE,CACJ,GAAGe,KAAK,CAACf,MADL,EAEJgB,MAAM,CAACG,OAFH;AAHN,OAAN;;AASA,SAAKrB,KAAK,CAACuB,eAAX;AACI,aAAM,EAEF,GAAGN,KAFD;AAGFF,QAAAA,WAAW,EAAE;AAHX,OAAN;;AAMA,SAAKf,KAAK,CAACwB,YAAX;AACI,aAAM,EACF,GAAGP,KADD;AAEFf,QAAAA,MAAM,EAAEe,KAAK,CAACf,MAAN,CAAauB,GAAb,CACJC,CAAC,IAAKA,CAAC,CAACvB,EAAF,KAASe,MAAM,CAACG,OAAP,CAAelB,EAAzB,GAAgCe,MAAM,CAACG,OAAvC,GAAiDK,CADlD;AAFN,OAAN;;AAOhB;AACI,aAAOT,KAAP;AAjCR;AAmCH,CArCM","sourcesContent":["import moment from \"moment\";\r\nimport { S } from \"../../node_modules/xmlchars/xml/1.0/ed5\";\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n\r\n    events:[{\r\n        id: new Date().getTime(),\r\n        title: 'Cumpleloco',\r\n        start: moment().toDate(),\r\n        end: moment().add(2,'hours').toDate(),\r\n        bgcolor:'#fafa',\r\n        notes:'Comprar la birrah',\r\n        user:{\r\n            id:'123',\r\n            name:'Santiago',\r\n        }\r\n     }],\r\n    activeEvent: null\r\n\r\n\r\n}\r\n\r\n\r\nexport const calendarReducer = (state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n            case types.eventAddNew:\r\n                return{\r\n\r\n                    ...state,\r\n                    events: [\r\n                        ...state.events,\r\n                        action.payload\r\n                        \r\n                    ]\r\n                }\r\n                case types.eventClearEvent:\r\n                    return{\r\n\r\n                        ...state,\r\n                        activeEvent: null\r\n                    }\r\n\r\n                    case types.eventUpdated:\r\n                        return{\r\n                            ...state,\r\n                            events: state.events.map(\r\n                                e => (e.id === action.payload.id ) ? action.payload : e\r\n                            )\r\n                        };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}