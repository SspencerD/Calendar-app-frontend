{"ast":null,"code":"import { fetchWithoutToken } from '../components/helpers/fetch.js';\nimport { types } from '../types/types.js';\nexport const startLogin = (email, password) => {\n  return async dispatch => {\n    const resp = await fetchWithoutToken('auth', {\n      email,\n      password\n    }, 'POST');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({\n        uid: body.uid,\n        name: body.name\n      }));\n    }\n  };\n};\n\nconst login = user => ({\n  type: types.authLogin,\n  payload: user\n});","map":{"version":3,"sources":["/home/sspencer/Escritorio/Proyectos/React/calendar-app/src/actions/auth.js"],"names":["fetchWithoutToken","types","startLogin","email","password","dispatch","resp","body","json","ok","localStorage","setItem","token","Date","getTime","login","uid","name","user","type","authLogin","payload"],"mappings":"AACA,SAASA,iBAAT,QAAkC,gCAAlC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAoB;AAE1C,SAAO,MAAOC,QAAP,IAAqB;AAExB,UAAMC,IAAI,GAAG,MAAMN,iBAAiB,CAAE,MAAF,EAAU;AAACG,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAV,EAA2B,MAA3B,CAApC;AACA,UAAMG,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAnB;;AAEA,QAAGD,IAAI,CAACE,EAAR,EAAa;AAETC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BJ,IAAI,CAACK,KAAlC;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwC,IAAIE,IAAJ,GAAWC,OAAX,EAAxC;AAEAT,MAAAA,QAAQ,CAACU,KAAK,CAAC;AACXC,QAAAA,GAAG,EAAET,IAAI,CAACS,GADC;AAEXC,QAAAA,IAAI,EAAEV,IAAI,CAACU;AAFA,OAAD,CAAN,CAAR;AAIH;AACJ,GAfD;AAgBH,CAlBM;;AAoBP,MAAMF,KAAK,GAAIG,IAAD,KAAU;AACpBC,EAAAA,IAAI,EAAElB,KAAK,CAACmB,SADQ;AAEpBC,EAAAA,OAAO,EAAEH;AAFW,CAAV,CAAd","sourcesContent":["\nimport { fetchWithoutToken } from '../components/helpers/fetch.js';\nimport { types } from '../types/types.js';\n\nexport const startLogin = (email,password) => {\n\n    return async( dispatch ) => {\n\n        const resp = await fetchWithoutToken( 'auth', {email,password},'POST');\n        const body = await resp.json();\n\n        if(body.ok ) {\n\n            localStorage.setItem('token',body.token);\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        }\n    }\n} \n\nconst login = (user) =>({\n    type: types.authLogin,\n    payload: user\n\n})"]},"metadata":{},"sourceType":"module"}